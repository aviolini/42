IMPLEMENT ITERATOR
https://www.youtube.com/watch?v=Q4bIYkTSu5c
https://www.youtube.com/watch?v=F9eDv-YIOQ0
https://internalpointers.com/post/writing-custom-iterators-modern-cpp

ENABLE_IF
https://www.fluentcpp.com/2018/05/15/make-sfinae-pretty-1-what-value-sfinae-brings-to-code/

FRIEND
https://www.justsoftwaresolutions.co.uk/cplusplus/hidden-friends.html

BALANCE TREE
https://www.programiz.com/dsa/avl-tree

TEST
git clone https://github.com/mli42/containers_test.git && cd ./containers_test/

                                  vector
vector/assign.cpp                  : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/at.cpp                      : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/at_const.cpp                : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/bidirect_it.cpp             : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/copy_construct.cpp          : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/erase.cpp                   : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/insert.cpp                  : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/insert2.cpp                 : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/ite.cpp                     : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/ite_arrow.cpp               : COMPILE: ✅ | RET: ✅ | OUT: ❌ | STD: [Y]
vector/ite_eq_ope.cpp              : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/ite_n0.cpp                  : COMPILE: ❌ | RET: ❌ | OUT: ✅ | STD: [N]
vector/ite_n00.cpp                 : COMPILE: ❌ | RET: ❌ | OUT: ✅ | STD: [N]
vector/ite_n1.cpp                  : COMPILE: ❌ | RET: ❌ | OUT: ✅ | STD: [N]
vector/push_pop.cpp                : COMPILE: ✅ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/relational_ope.cpp          : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/rev_ite_construct.cpp       : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/rite.cpp                    : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/rite2.cpp                   : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/rite_arrow.cpp              : COMPILE: ✅ | RET: ✅ | OUT: ❌ | STD: [Y]
vector/rite_eq_ope.cpp             : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
vector/size.cpp                    : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
vector/swap.cpp                    : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
                                     map
map/bounds.cpp                     : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/comp.cpp                       : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/copy_construct.cpp             : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/empty.cpp                      : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/erase.cpp                      : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/erase2.cpp                     : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/find_count.cpp                 : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/insert.cpp                     : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/insert2.cpp                    : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/ite_arrow.cpp                  : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/ite_n0.cpp                     : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [N]
map/ite_n1.cpp                     : COMPILE: ❌ | RET: ❌ | OUT: ✅ | STD: [N]
map/ite_type.cpp                   : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [N]
map/more.cpp                       : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/op_sqbr.cpp                    : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/relational_ope.cpp             : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/rev_ite_construct.cpp          : COMPILE: ✅ | RET: ❌ | OUT: ❌ | STD: [Y]
map/rite.cpp                       : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/rite_arrow.cpp                 : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/swap.cpp                       : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/tricky_construct.cpp           : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
map/tricky_erase.cpp               : COMPILE: ❌ | RET: ❌ | OUT: ❌ | STD: [Y]
                                   stack
stack/default.cpp                  : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
stack/default_copy.cpp             : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
stack/list_copy.cpp                : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
stack/relational_ope.cpp           : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
stack/relational_ope_list.cpp      : COMPILE: ✅ | RET: ✅ | OUT: ✅ | STD: [Y]
                                     set